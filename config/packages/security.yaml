security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    # Définition des mécanismes de hachage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Définition du fournisseur d'utilisateurs
    providers:
        # Utilisation d'une base de données pour récupérer les utilisateurs
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email  # Utilisation de l'email comme identifiant unique

    # Définition des firewalls
    firewalls:
        dev:
            # Pas de sécurité pour les ressources liées au profiler, WDT, etc.
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            # Le firewall principal
            lazy: true
            provider: app_user_provider  # Utilisation du fournisseur d'utilisateurs défini ci-dessus

            # Authentification par formulaire
            form_login:
                login_path: app_login      # La route pour la page de connexion
                check_path: app_login      # La route qui traitera la soumission du formulaire de connexion
                default_target_path: app_home  # La route vers laquelle l'utilisateur est redirigé après une connexion réussie
                always_use_default_target_path: true  # Toujours utiliser la route par défaut après connexion

            # Déconnexion
            logout:
                path: /logout          # La route de déconnexion
                target: app_login          # La route vers laquelle l'utilisateur sera redirigé après déconnexion

            # Accès anonyme autorisé



    # Contrôle d'accès
    access_control:
        # Si tu veux protéger une page avec un rôle spécifique, ajoute une règle ici
        # Exemple : Si tu veux restreindre l'accès à /admin aux administrateurs :
        - { path: ^/admin, roles: ROLE_ADMIN }
        # Exemple : Si tu veux restreindre l'accès à /profile aux utilisateurs authentifiés
        - { path: ^/profile, roles: ROLE_USER }


    # Configuration de sécurité spécifique pour l'environnement de test
when@test:
    security:
        password_hashers:
            # Dans l'environnement de test, on utilise une configuration plus rapide pour les hachages de mots de passe
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Valeur la plus basse pour bcrypt
                time_cost: 3  # Valeur la plus basse pour argon
                memory_cost: 10  # Valeur la plus basse pour argon
